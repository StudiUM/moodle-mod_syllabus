{"version":3,"sources":["../src/requiredfields_popup.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","Notification","RequiredfieldsPopup","tabserror","editform","init","prototype","modal","self","get_string","then","title","create","type","types","SAVE_CANCEL","bind","setLarge","getRoot","on","shown","params","length","hasmoreonetab","hasonetab","tabs","render","done","html","setBody","fail","exception","save","tempunload","window","onbeforeunload","submit","cancel","destroy","hidden","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the popup about the required fields.\n *\n * @author     Marie-Eve Lévesque <marie-eve.levesque.8@umontreal.ca>\n * @copyright  2020 Université de Montréal\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/templates', 'core/notification'],\n    function($, Str, ModalFactory, ModalEvents, Templates, Notification) {\n\n        /**\n         * Constructor.\n         *\n         * @param {array} tabserror The list of tabs with errors (to list the tabs names in the popup).\n         * @param {object} editform The edit form that this popup lists the errors of.\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var RequiredfieldsPopup = function(tabserror, editform) {\n            this.init(tabserror, editform);\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        RequiredfieldsPopup.prototype.modal = null;\n\n        /**\n         * Initialise the class.\n         *\n         * @param {array} tabserror The list of tabs with errors (to list the tabs names in the popup).\n         * @param {object} editform The edit form that this popup lists the errors of.\n         * @private\n         * @return {Promise}\n         */\n        RequiredfieldsPopup.prototype.init = function(tabserror, editform) {\n            var self = this;\n            // Fetch the title string.\n            return Str.get_string('requiredfields_title', 'mod_syllabus').then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title\n                });\n            }.bind(this)).then(function(modal) {\n                // Keep a reference to the modal.\n                self.modal = modal;\n\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    var params = {};\n                    if (tabserror.length > 1) {\n                        params.hasmoreonetab = true;\n                        params.hasonetab = false;\n                    } else {\n                        params.hasmoreonetab = false;\n                        params.hasonetab = true;\n                    }\n                    params.tabs = tabserror;\n\n                    Templates.render('mod_syllabus/requiredfields', params).done(function(html) {\n                        self.modal.setBody(html);\n                    }).fail(Notification.exception);\n\n                }.bind(this));\n\n                // Clicking on the save button submits the form (and continues with usual behaviour).\n                self.modal.getRoot().on(ModalEvents.save, function() {\n                    // Temporarily set onbeforeunload to null to avoid the browser popup saying the changes were not saved.\n                    var tempunload = window.onbeforeunload;\n                    window.onbeforeunload = null;\n                    // Call the old onbeforeunload function in case some usefull stuff is done in it.\n                    tempunload();\n                    // Submit the form and set back the old onbeforeunload.\n                    $(editform).submit();\n                    window.onbeforeunload = tempunload;\n                }.bind(this));\n\n                // Click on the cancel button.\n                self.modal.getRoot().on(ModalEvents.cancel, function() {\n                    // Destroy the popup and stay on the form without saving.\n                    self.modal.destroy();\n                }.bind(this));\n\n                // Click on the close button.\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy the popup and stay on the form without saving.\n                    self.modal.destroy();\n                }.bind(this));\n\n                // Show the popup.\n                self.modal.show();\n                return self.modal;\n            }.bind(this));\n        };\n\n        return {\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {array} tabserror The list of tabs with errors (to list the tabs names in the popup).\n             * @param {object} editform The edit form that this popup lists the errors of.\n             * @return {RequiredfieldsPopup} A new instance of RequiredfieldsPopup.\n             */\n            init: function(tabserror, editform) {\n                return new RequiredfieldsPopup(tabserror, editform);\n            }\n        };\n    });"],"file":"requiredfields_popup.min.js"}